//circular queue
#include<stdio.h>
#include<stdlib.h>
#define SIZE 100
int queue[SIZE],front=-1,rear=-1;
int isEmpty(){
    return(front==-1)?1:0;

}
int isFull(){
    return((rear+1)%SIZE==front)?1:0;
}
void enqueue(int data){
rear=(rear+1)%SIZE;
queue[rear]=data;
if(front==-1)
front=0;
printf("element inserted!!!!!!!\n");
}
int dequeue(){
int data =queue[front];
if(front==rear)
front=rear=-1;
else
front=(front+1)%SIZE;
return data;
}
int peek(){
return queue[front];
}
void display(){
printf(" circular queue elements are:\n");
int i=front;
while(i!=rear){
    printf("%d ",queue[i]);
    i=(i+1)%SIZE;
}
printf("%d",queue[rear]);
}
int main(){
    while(1){
        printf("-----------CIRCULAR QUEUE-----------\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. peek\n");
        printf("4. display\n");
        printf("5. exit\n");
        int choice ,data;
        printf("enter choice:");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            if(isFull())
            printf("queue overflow!!!\n");
            else{
                printf("enter element :");
                scanf("%d",&data);
                enqueue(data);                                                                       
            }
            break;
            case 2:
            if(isEmpty())
            printf("queue underflow!!!\n");
            else 
                printf("%d is dequeue from the queue\n",dequeue());                                                                       
            break;
            case 3:
            if(isEmpty())
            printf("queue is empty!!!\n");
            else
            printf("element available in front of queue is %d\n",peek());
            break;
            case 4:
            if(isEmpty())
            printf("queue is empty!!!\n");
            else
            display();
            break;
            case 5:
            exit(0);
            default:
            printf("invalid choice \n");
        }
        printf("\n");
    }
    return 0;
}
